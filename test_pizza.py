import pytest

from pizza import process_order
from pizza import pre_menu
from pizza import Margherita
from pizza import Pepperoni
from pizza import Hawaiian


def test_process_order_pickup():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ä–¥–µ—Ä –Ω–∞ —Å–∞–º–æ–≤—ã–≤–æ–∑"""
    has_prefix = 'üë®üèª‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ '
    has_postfix = ' –º–∏–Ω—É—Ç!\nüè† –ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ!'
    minutes_min = 9
    minutes_max = 26
    result = process_order('pepperoni', '', '')
    assert result.startswith(has_prefix)
    assert result.endswith(has_postfix)
    assert minutes_min < int(result[19:22]) < minutes_max


def test_process_order_delivery():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ä–¥–µ—Ä –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É"""
    has_prefix = 'üë®üèª‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ '
    has_postfix = ' –º–∏–Ω—É—Ç!'
    between = '–º–∏–Ω—É—Ç!\nüõµ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞'
    minutes_min = 9
    minutes_max = 26
    delivery_minutes_min = 14
    delivery_minutes_max = 31
    result = process_order('pepperoni', 'delivery', '')
    assert between in result
    assert result.startswith(has_prefix)
    assert result.endswith(has_postfix)
    assert minutes_min < int(result[20:22]) < minutes_max
    assert delivery_minutes_min < int(result[45:47]) < delivery_minutes_max


def test_pre_menu():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –º–µ–Ω—é"""
    expected = '- Margherita üßÄ: tomato sauce, mozzarella, tomatoes\n- Pepperoni üçï: tomato sauce, mozzarella, pepperoni\n- Hawaiian üçç: tomato sauce, mozzarella, chicken, pineapples'
    assert pre_menu() == expected


def test_pizza_eq():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ –ø–∏—Ü—Ü"""
    peppe_1 = Pepperoni('L')
    peppe_2 = Pepperoni('L')
    margo_1 = Margherita('XL')
    margo_2 = Margherita('XL')
    hawa_1 = Hawaiian('L')
    hawa_2 = Hawaiian('XL')
    assert peppe_1.__eq__(peppe_2)
    assert margo_1.__eq__(margo_2)
    assert not hawa_1.__eq__(hawa_2)


def test_pizza_eq_error():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ –ø–∏—Ü—Ü (–Ω–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ)"""
    peppe_1 = Pepperoni('L')
    pizza_name = 'Pepperoni'
    assert peppe_1.__eq__(pizza_name) == NotImplemented
